version: '2.4'
services:
  traefik:
    image: traefik:v2.10
    deploy:
      resources:
        limits:
          cpus: ${TRAEFIK_CPU_LIMIT:-0.25}
          memory: ${TRAEFIK_MEMORY_LIMIT:-512M}
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_dynamic_conf:/etc/traefik/dynamic_conf
    restart: unless-stopped
    network_mode: bridge
    group_add:
      - "1001"
    profiles: ["core", "web", "plex", "jellyfin", "all-plex", "all-jellyfin", "all-media", "all"]
    environment:
      - TZ=${TZ:-America/Chicago}

  plex:
    image: plexinc/pms-docker
    deploy:
      resources:
        limits:
          cpus: ${PLEX_CPU_LIMIT:-4.0}
          memory: ${PLEX_MEMORY_LIMIT:-8G}
    container_name: plex
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - PLEX_PREFERENCE_1="TranscoderQuality=2"
    network_mode: host
    volumes:
      - ${PLEX_CONFIG_DIR:-/var/lib/plexmediaserver}:/config
      - ${PLEX_TRANSCODE_DIR:-/var/lib/plexmediaserver/transcode}:/transcode
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
    profiles: ["plex", "all-media", "all-plex", "all"]

  jellyfin:
    image: jellyfin/jellyfin
    deploy:
      resources:
        limits:
          cpus: ${JELLYFIN_CPU_LIMIT:-1.0}
          memory: ${JELLYFIN_MEMORY_LIMIT:-2G}
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
    ports:
      - ${JELLYFIN_PORT:-8096}:8096
    network_mode: bridge
    volumes:
      - ${JELLYFIN_CONFIG_DIR:-/var/lib/jellyfin/config}:/config
      - ${JELLYFIN_CACHE_DIR:-/var/lib/jellyfin/cache}:/cache
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`watch.${DOMAIN}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    profiles: ["jellyfin", "all-media", "all-jellyfin", "all"]

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    deploy:
      resources:
        limits:
          cpus: ${JELLYSEERR_CPU_LIMIT:-0.5}
          memory: ${JELLYSEERR_MEMORY_LIMIT:-1G}
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ:-America/Chicago}
      - PORT=${JELLYSEERR_PORT:-5055}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
    ports:
      - ${JELLYSEERR_PORT:-5055}:5055
    volumes:
      - ${JELLYSEERR_CONFIG_DIR:-/var/lib/jellyseerr/config}:/app/config
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`find.${DOMAIN}`)"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
    profiles: ["core", "media", "plex", "jellyfin", "all-media", "all-plex", "all-jellyfin", "all"]

  transmission-vpn:
    image: haugene/transmission-openvpn:latest
    deploy:
      resources:
        limits:
          cpus: ${TRANSMISSION_VPN_CPU_LIMIT:-1.0}
          memory: ${TRANSMISSION_VPN_MEMORY_LIMIT:-2G}
    container_name: transmission-vpn
    env_file: .env
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    ports:
      - "${TRANSMISSION_VPN_PORT:-9091}:9091"
      - "${TRANSMISSION_VPN_PORT_2:-51413}:51413"
      - "${TRANSMISSION_VPN_PORT_2:-51413}:51413/udp"
    environment:
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - LOCAL_NETWORK=192.168.0.0/16,172.16.0.0/12
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
      - TRANSMISSION_DOWNLOAD_DIR=${TRANSMISSION_DOWNLOAD_DIR:-/mnt/vault2/Downloaded}
      - TRANSMISSION_INCOMPLETE_DIR=${TRANSMISSION_INCOMPLETE_DIR:-/incomplete}
      - TRANSMISSION_WATCH_DIR=${TRANSMISSION_WATCH_DIR:-/watch}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${TRANSMISSION_CONFIG_DIR:-/var/lib/transmission-daemon/.config/transmission-daemon}:/config
      - ${TRANSMISSION_DOWNLOAD_DIR:-/mnt/vault2/Downloaded}:/mnt/vault2/Downloaded
      - ${TRANSMISSION_INCOMPLETE_DIR:-/mnt/vault2/Incomplete}:/incomplete
      - ${TRANSMISSION_WATCH_DIR:-/var/lib/transmission-daemon/downloads}:/watch
    network_mode: bridge
    profiles: ["core", "download", "all-plex", "all-jellyfin", "all"]

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    deploy:
      resources:
        limits:
          cpus: ${RADARR_CPU_LIMIT:-0.5}
          memory: ${RADARR_MEMORY_LIMIT:-1G}
    ports:
      - "${RADARR_PORT:-7878}:7878"
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${RADARR_CONFIG_DIR:-/var/lib/radarr/config}:/config
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`movies.${DOMAIN}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    profiles: ["core", "media", "all-plex", "all-jellyfin", "all"]

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    deploy:
      resources:
        limits:
          cpus: ${PROWLARR_CPU_LIMIT:-0.25}
          memory: ${PROWLARR_MEMORY_LIMIT:-512M}
    ports:
      - "${PROWLARR_PORT:-9696}:9696"
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${PROWLARR_CONFIG_DIR:-/var/lib/prowlarr/config}:/config
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    profiles: ["core", "download", "all-plex", "all-jellyfin", "all"]

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    deploy:
      resources:
        limits:
          cpus: ${SONARR_CPU_LIMIT:-0.5}
          memory: ${SONARR_MEMORY_LIMIT:-1G}
    ports:
      - "${SONARR_PORT:-8989}:8989"
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${SONARR_CONFIG_DIR:-/var/lib/sonarr/config}:/config
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`shows.${DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    profiles: ["core", "media", "all-plex", "all-jellyfin", "all"]

  bazarr:
    container_name: bazarr
    image: ghcr.io/linuxserver/bazarr
    deploy:
      resources:
        limits:
          cpus: ${BAZARR_CPU_LIMIT:-0.5}
          memory: ${BAZARR_MEMORY_LIMIT:-1G}
    ports:
      - ${BAZARR_PORT:-6767}:6767
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${BAZARR_CONFIG_DIR:-/var/lib/bazarr/config}:/config
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
    profiles: ["core", "media", "all-plex", "all-jellyfin", "all"]

  ersatztv:
    image: jasongdove/ersatztv:latest
    container_name: ersatztv
    deploy:
      resources:
        limits:
          cpus: ${ERSATZTV_CPU_LIMIT:-2.0}
          memory: ${ERSATZTV_MEMORY_LIMIT:-4G}
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
    ports:
      - ${ERSATZTV_PORT:-8409}:8409
    volumes:
      - ${ERSATZTV_CONFIG_DIR:-/var/lib/ersatztv/config}:/root/.local/share/ersatztv
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1:ro
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2:ro
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ersatztv.rule=Host(`live.${DOMAIN}`)"
      - "traefik.http.services.ersatztv.loadbalancer.server.port=8409"
    profiles: ["media", "all-plex", "all-jellyfin", "all"]

  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:latest
    deploy:
      resources:
        limits:
          cpus: ${MAINTAINERR_CPU_LIMIT:-0.5}
          memory: ${MAINTAINERR_MEMORY_LIMIT:-1G}
    container_name: maintainerr
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
    ports:
      - "${MAINTAINERR_PORT:-6246}:6246"
    volumes:
      - ${MAINTAINERR_CONFIG_DIR:-/var/lib/maintainerr/config}:/opt/data
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintainerr.rule=Host(`maintain.${DOMAIN}`)"
      - "traefik.http.services.maintainerr.loadbalancer.server.port=6246"
    profiles: ["maintenance", "all-plex", "all-jellyfin", "all"]

  tautulli:
    image: ghcr.io/tautulli/tautulli
    deploy:
      resources:
        limits:
          cpus: ${TAUTULLI_CPU_LIMIT:-0.5}
          memory: ${TAUTULLI_MEMORY_LIMIT:-1G}
    container_name: tautulli
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
    ports:
      - "${TAUTULLI_PORT:-8181}:8181"
    volumes:
      - ${TAUTULLI_CONFIG_DIR:-/var/lib/tautulli/config}:/config
      - ${PLEX_LOGS_DIR:-/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs}:/plex_logs:ro
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.${DOMAIN}`)"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"
    profiles: ["monitoring", "plex", "all-media", "all-plex", "all"]

  organizr:
    image: organizr/organizr:latest
    deploy:
      resources:
        limits:
          cpus: ${ORGANIZR_CPU_LIMIT:-0.5}
          memory: ${ORGANIZR_MEMORY_LIMIT:-1G}
    container_name: organizr
    restart: unless-stopped
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${ORGANIZR_CONFIG_DIR:-/var/lib/organizr/config}:/config
    ports:
      - "${ORGANIZR_PORT:-8888}:80"
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.organizr.rule=Host(`home.${DOMAIN}`)"
      - "traefik.http.services.organizr.loadbalancer.server.port=80"
    profiles: ["web", "all-plex", "all-jellyfin", "all"]

  kitana:
    image: pannal/kitana
    deploy:
      resources:
        limits:
          cpus: ${KITANA_CPU_LIMIT:-0.25}
          memory: ${KITANA_MEMORY_LIMIT:-256M}
    container_name: kitana
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    ports:
      - "${KITANA_PORT:-31337}:31337"
    volumes:
      - ${PLEX_CONFIG_DIR:-/var/lib/plexmediaserver}:/plex
      - ${KITANA_DATA_DIR:-/var/lib/kitana/data}:/app/data
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kitana.rule=Host(`kitana.${DOMAIN}`)"
      - "traefik.http.services.kitana.loadbalancer.server.port=31337"
    profiles: ["media", "all-plex", "all-jellyfin", "all"]

  kometa:
    image: kometateam/kometa:latest
    deploy:
      resources:
        limits:
          cpus: ${KOMETA_CPU_LIMIT:-0.5}
          memory: ${KOMETA_MEMORY_LIMIT:-1G}
    container_name: kometa
    restart: unless-stopped
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - KOMETA_CONFIG=/config/config.yml
      - KOMETA_RUN=true
      - KOMETA_NO_VERIFY_SSL=true
      - KOMETA_READ_ONLY_CONFIG=true
      - PLEX_URL=${PLEX_URL}
      - PLEX_TOKEN=${PLEX_TOKEN}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - TAUTULLI_URL=${TAUTULLI_URL}
      - TAUTULLI_API_KEY=${TAUTULLI_API_KEY}
    ports:
      - "${KOMETA_PORT:-3000}:3000"
    volumes:
      - ${KOMETA_CONFIG_DIR:-./kometa_config}:/config:rw
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
      - ${PLEX_LOGS_DIR:-/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs}:/plex_logs:ro
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kometa.rule=Host(`kometa.${DOMAIN}`)"
      - "traefik.http.services.kometa.loadbalancer.server.port=3000"
    profiles: ["media", "all-plex", "all-jellyfin", "all"]
    entrypoint: >
      /bin/sh -c "
      echo 'Printing Kometa environment variables:';
      env | sort;
      echo 'Starting Kometa...';
      /docker-entrypoint.sh $$@"

  auto-m4b:
    image: seanap/auto-m4b
    container_name: auto-m4b
    deploy:
      resources:
        limits:
          cpus: ${AUTO_M4B_CPU_LIMIT:-0.5}
          memory: ${AUTO_M4B_MEMORY_LIMIT:-1G}
    volumes:
      - ${AUTO_M4B_CONFIG_DIR:-/var/lib/auto-m4b/config}:/config
      - ${AUTO_M4B_DOWNLOADED_DIR:-/mnt/vault2/Downloaded/books}:/temp/recentlyadded
      - ${AUTO_M4B_TEMP_DIR:-/mnt/vault2/Temp}:/temp
      - ${AUTO_M4B_UNTAGGED_DIR:-/mnt/vault2/Books}:/temp/untagged
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - CPU_CORES=${AUTO_M4B_CPU_CORES:-2}
      - SLEEPTIME=${AUTO_M4B_SLEEPTIME:-5m}
      - MAKE_BACKUP=${AUTO_M4B_MAKE_BACKUP:-N}
    restart: unless-stopped
    network_mode: bridge
    profiles: ["books", "all-plex", "all-jellyfin", "all"]

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    deploy:
      resources:
        limits:
          cpus: ${AUDIOBOOKSHELF_CPU_LIMIT:-1.0}
          memory: ${AUDIOBOOKSHELF_MEMORY_LIMIT:-2G}
    ports:
      - "${AUDIOBOOKSHELF_PORT:-13378}:80"
    environment:
      - TZ=${TZ:-America/Chicago}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
    volumes:
      - ${AUDIOBOOKSHELF_CONFIG_DIR:-/var/lib/audiobookshelf/config}:/config
      - ${AUDIOBOOKSHELF_METADATA_DIR:-/var/lib/audiobookshelf/metadata}:/metadata
      - ${AUDIOBOOKSHELF_AUDIOBOOKS_DIR:-/mnt/vault2/Books}:/audiobooks
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.audiobookshelf.rule=Host(`audiobooks.${DOMAIN}`)"
      - "traefik.http.services.audiobookshelf.loadbalancer.server.port=80"
    profiles: ["books", "all-plex", "all-jellyfin", "all"]

  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr:testing
    deploy:
      resources:
        limits:
          cpus: ${READARR_CPU_LIMIT:-0.5}
          memory: ${READARR_MEMORY_LIMIT:-1G}
    ports:
      - "${READARR_PORT:-8787}:8787"
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-002}
      - TZ=${TZ:-America/Chicago}
    volumes:
      - ${READARR_CONFIG_DIR:-/var/lib/readarr/config}:/config
      - ${MEDIA_DIR_1:-/mnt/vault1}:/mnt/vault1
      - ${MEDIA_DIR_2:-/mnt/vault2}:/mnt/vault2
      - ${READARR_CERT_DIR:-./scraper/certs/bookinfo-club.crt}:/etc/ssl/certs/bookinfo-club.crt
    restart: unless-stopped
    networks:
      - default
      - scraper_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.rule=Host(`books.${DOMAIN}`)"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"
    profiles: ["books", "all-plex", "all-jellyfin", "all"]

  readarr-metadata-scraper:
    build: scraper
    container_name: readarr-metadata-scraper
    depends_on:
      - readarr
    networks:
      scraper_network:
        aliases:
          - api.bookinfo.club
    profiles: ["books", "all-plex", "all-jellyfin", "all"]

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    deploy:
      resources:
        limits:
          cpus: ${FLARESOLVERR_CPU_LIMIT:-1.0}
          memory: ${FLARESOLVERR_MEMORY_LIMIT:-2G}
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ:-America/Chicago}
      - CAPTCHA_SOLVER=none
      - BROWSER_TIMEOUT=40000
    ports:
      - "${FLARESOLVERR_PORT:-8191}:8191"
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.${DOMAIN}`)"
      - "traefik.http.services.flaresolverr.loadbalancer.server.port=8191"
    profiles: ["core", "download", "all-plex", "all-jellyfin", "all"]

networks:
  default:
    driver: bridge
  scraper_network:
    driver: bridge