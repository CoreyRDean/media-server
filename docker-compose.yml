version: '2.4'
services:
  traefik:
    image: traefik:v2.10
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 512M
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_dynamic_conf:/etc/traefik/dynamic_conf
    restart: unless-stopped
    network_mode: bridge
    group_add:
      - "1001"

  plex:
    image: plexinc/pms-docker
    deploy:
      resources:
        limits:
          cpus: 4.0
          memory: 8G
    container_name: plex
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - PLEX_PREFERENCE_1="TranscoderQuality=2"
    network_mode: host
    volumes:
      - /var/lib/plexmediaserver:/config
      - /tmp:/transcode
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2

  jellyfin:
    image: jellyfin/jellyfin
    deploy:
      resources:
        limits:
          cpus: 2.0
          memory: 4G
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
      - UMASK=002
    ports:
      - 8096:8096
    network_mode: bridge
    volumes:
      - /var/lib/jellyfin/config:/config
      - /var/lib/jellyfin/cache:/cache
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`watch.${DOMAIN}`)"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Chicago
      - PORT=5055
      - PUID=1000
      - PGID=1000
      - UMASK=002
    ports:
      - 5055:5055
    volumes:
      - /var/lib/jellyseerr/config:/app/config
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`find.${DOMAIN}`)"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"

  transmission-vpn:
    image: haugene/transmission-openvpn:latest
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 2G
    container_name: transmission-vpn
    env_file: .env
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    environment:
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - LOCAL_NETWORK=192.168.0.0/16,172.16.0.0/12
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
      - TRANSMISSION_DOWNLOAD_DIR=/mnt/vault2/Downloaded
      - TRANSMISSION_INCOMPLETE_DIR=/incomplete
      - TRANSMISSION_WATCH_DIR=/watch
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /var/lib/transmission-daemon/.config/transmission-daemon:/config
      - /mnt/vault2/Downloaded:/mnt/vault2/Downloaded
      - /mnt/vault2/Incomplete:/incomplete
      - /var/lib/transmission-daemon/downloads:/watch
    network_mode: bridge

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /var/lib/radarr/config:/config
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`movies.${DOMAIN}`)"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 512M
    ports:
      - "9696:9696"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /var/lib/prowlarr/config:/config
    restart: unless-stopped
    network_mode: host

  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    ports:
      - "8989:8989"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /var/lib/sonarr/config:/config
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`shows.${DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  bazarr:
    container_name: bazarr
    image: ghcr.io/linuxserver/bazarr
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    ports:
      - 6767:6767
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /var/lib/bazarr/config:/config
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2
    restart: unless-stopped
    network_mode: host

  ersatztv:
    image: jasongdove/ersatztv:latest
    container_name: ersatztv
    deploy:
      resources:
        limits:
          cpus: 2.0
          memory: 4G
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
      - UMASK=002
    ports:
      - 8409:8409
    volumes:
      - /var/lib/ersatztv/config:/root/.local/share/ersatztv
      - /mnt/vault1:/mnt/vault1:ro
      - /mnt/vault2:/mnt/vault2:ro
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ersatztv.rule=Host(`live.${DOMAIN}`)"
      - "traefik.http.services.ersatztv.loadbalancer.server.port=8409"

  maintainerr:
    image: ghcr.io/jorenn92/maintainerr:latest
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    container_name: maintainerr
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
      - UMASK=002
    ports:
      - "6246:6246"
    volumes:
      - /var/lib/maintainerr/config:/config
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintainerr.rule=Host(`maintain.${DOMAIN}`)"
      - "traefik.http.services.maintainerr.loadbalancer.server.port=6246"

  tautulli:
    image: ghcr.io/tautulli/tautulli
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    container_name: tautulli
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
      - UMASK=002
    ports:
      - "8181:8181"
    volumes:
      - /var/lib/tautulli/config:/config
      - /var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tautulli.rule=Host(`tautulli.${DOMAIN}`)"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"

  organizr:
    image: organizr/organizr:latest
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    container_name: organizr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /var/lib/organizr/config:/config
    ports:
      - "8888:80"
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.organizr.rule=Host(`home.${DOMAIN}`)"
      - "traefik.http.services.organizr.loadbalancer.server.port=80"

  kitana:
    image: pannal/kitana
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 256M
    container_name: kitana
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
    ports:
      - "31337:31337"
    volumes:
      - /var/lib/plexmediaserver:/plex
      - /var/lib/kitana/data:/app/data
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kitana.rule=Host(`kitana.${DOMAIN}`)"
      - "traefik.http.services.kitana.loadbalancer.server.port=31337"

  kometa:
    image: kometateam/kometa:latest
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    container_name: kometa
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - KOMETA_CONFIG=/config/config.yml
      - KOMETA_RUN=true
    ports:
      - "3000:3000"
    volumes:
      - ./kometa_config:/config:rw
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2
      - /var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kometa.rule=Host(`kometa.${DOMAIN}`)"
      - "traefik.http.services.kometa.loadbalancer.server.port=3000"

  readarr:
    container_name: readarr
    image: ghcr.io/hotio/readarr:testing
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    ports:
      - "8787:8787"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=America/Chicago
    volumes:
      - /var/lib/readarr/config:/config
      - /mnt/vault1:/mnt/vault1
      - /mnt/vault2:/mnt/vault2
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.readarr.rule=Host(`books.${DOMAIN}`)"
      - "traefik.http.services.readarr.loadbalancer.server.port=8787"

  auto-m4b:
    image: seanap/auto-m4b
    container_name: auto-m4b
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 1G
    volumes:
      - /var/lib/auto-m4b/config:/config
      - /mnt/vault2/Downloaded/books:/temp/recentlyadded
      - /mnt/vault2/Temp:/temp
      - /mnt/vault2/Books:/temp/untagged
    environment:
      - PUID=1000
      - PGID=1000
      - CPU_CORES=2
      - SLEEPTIME=5m
      - MAKE_BACKUP=N
    restart: unless-stopped
    network_mode: bridge

  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 2G
    ports:
      - "13378:80"
    environment:
      - TZ=America/Chicago
      - PUID=1000
      - PGID=1000
      - UMASK=002
    volumes:
      - /var/lib/audiobookshelf/config:/config
      - /var/lib/audiobookshelf/metadata:/metadata
      - /mnt/vault2/Books:/audiobooks
    restart: unless-stopped
    network_mode: bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.audiobookshelf.rule=Host(`audiobooks.${DOMAIN}`)"
      - "traefik.http.services.audiobookshelf.loadbalancer.server.port=13378"